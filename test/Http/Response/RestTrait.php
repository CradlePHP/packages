<?php

namespace Cradle\Http\Response;

use PHPUnit_Framework_TestCase;
use Cradle\Data\Registry;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-28 at 11:36:34.
 */
class Cradle_Http_Response_RestTrait_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var RestTrait
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RestTraitStub(array(
			'body' => array(
				'error' => true,
				'message' => 'foobar',
				'validation' => array(
					'foo' => 'bar',
					'bar' => 'foo'
				), 
				'results' => array(
					'foo' => 'bar',
					'bar' => 'foo'
				)
			)
		));
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Cradle\Http\Response\RestTrait::addValidation
     */
    public function testAddValidation()
    {
		$instance = $this->object->addValidation('zoo', 'foo');
		$this->assertInstanceOf('Cradle\Http\Response\RestTraitStub', $instance);
    }

    /**
     * @covers Cradle\Http\Response\RestTrait::getResults
     */
    public function testGetResults()
    {
		$actual = $this->object->getResults();
		$this->assertArrayHasKey('foo', $actual);
		$actual = $this->object->getResults('foo');
		$this->assertEquals('bar', $actual);
    }

    /**
     * @covers Cradle\Http\Response\RestTrait::getValidation
     */
    public function testGetValidation()
    {
		$actual = $this->object->getValidation();
		$this->assertArrayHasKey('foo', $actual);
		$actual = $this->object->getValidation('foo');
		$this->assertEquals('bar', $actual);
    }

    /**
     * @covers Cradle\Http\Response\RestTrait::setError
     */
    public function testSetError()
    {
		$instance = $this->object->setError(false);
		$this->assertInstanceOf('Cradle\Http\Response\RestTraitStub', $instance);
    }

    /**
     * @covers Cradle\Http\Response\RestTrait::setResults
     */
    public function testSetResults()
    {
		$instance = $this->object->setResults('zoo', 'foo');
		$this->assertInstanceOf('Cradle\Http\Response\RestTraitStub', $instance);
    }
}

if(!class_exists('Cradle\Http\Response\RestTraitStub')) {
	class RestTraitStub extends Registry
	{
		use RestTrait;
	}
}
