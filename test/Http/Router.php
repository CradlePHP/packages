<?php


namespace Cradle\Http;

use StdClass;
use PHPUnit_Framework_TestCase;
use Cradle\Http\Request;
use Cradle\Http\Response;
use Cradle\Event\EventHandler;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-29 at 06:57:17.
 */
class Cradle_Http_Router_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var Router
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Router;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Cradle\Http\Router::process
     */
    public function testProcess()
    {
		$request = new Request();
		$this->assertTrue($this->object->process($request));
    }

    /**
     * @covers Cradle\Http\Router::route
     */
    public function testRoute()
    {
		$instance = $this->object->route('foobar', '/foo/bar', function() {});
		$this->assertInstanceOf('Cradle\Http\Router', $instance);
		
		$request = new Request();
		$request->setPath('/foo/bar/zoo');
		$request->setMethod('get');
		
		$response = new Response();
		
		$trigger = new StdClass();
		$trigger->success1 = null;
		$trigger->success2 = null;
		$trigger->success3 = null;
		$trigger->success4 = null;
		$trigger->success5 = null;
		$trigger->success6 = null;
		
		$this
			->object
			->route('get', '/foo/bar/zoo', function($request, $response, $trigger, $test) {
				$trigger->success1 = true;
			})
			->route('get', '/foo/*/zoo', function($request, $response, $trigger, $test) {
				$trigger->success2 = true;
				$test->assertEquals('bar', $request->getVariables(0));
			})
			->route('get', '/foo/bar/*', function($request, $response, $trigger, $test) {
				$trigger->success3 = true;
				$test->assertEquals('zoo', $request->getVariables(0));
			})
			->route('get', '/foo/*/*', function($request, $response, $trigger, $test) {
				$trigger->success4 = true;
				$test->assertEquals('bar', $request->getVariables(0));
				$test->assertEquals('zoo', $request->getVariables(1));
			})
			->route('get', '/foo/*', function($request, $response, $trigger, $test) {
				$trigger->success5 = true;
			})
			->route('get', '/foo/**', function($request, $response, $trigger, $test) {
				$trigger->success6 = true;
				$test->assertEquals('bar', $request->getVariables(0));
				$test->assertEquals('zoo', $request->getVariables(1));
			})
			->process($request, $response, $trigger, $this);
			
		$this->assertTrue($trigger->success1);
		$this->assertTrue($trigger->success2);
		$this->assertTrue($trigger->success3);
		$this->assertTrue($trigger->success4);
		$this->assertNull($trigger->success5);
		$this->assertTrue($trigger->success6);
    }
}
