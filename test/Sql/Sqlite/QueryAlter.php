<?php 

namespace Cradle\Sql\Sqlite;

use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:03.
 */
class Cradle_Sql_Sqlite_QueryAlter_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var QueryAlter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new QueryAlter('foobar');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::addField
     */
    public function testAddField()
    {
        $instance = $this->object->addField('foobar', array());
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::addForeignKey
     */
    public function testAddForeignKey()
    {
        $instance = $this->object->addForeignKey('foobar', 'foo', 'bar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::addUniqueKey
     */
    public function testAddUniqueKey()
    {
        $instance = $this->object->addUniqueKey('foobar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::changeField
     */
    public function testChangeField()
    {
        $instance = $this->object->changeField('foobar', array());
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::getQuery
     */
    public function testGetQuery()
    {
        $actual = $this->object->getQuery();
		$this->assertEquals('ALTER TABLE "foobar" ;', $actual);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::removeField
     * @todo   Implement testRemoveField().
     */
    public function testRemoveField()
    {
        $instance = $this->object->removeField('foobar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::removeForeignKey
     */
    public function testRemoveForeignKey()
    {
        $instance = $this->object->removeForeignKey('foobar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::removeUniqueKey
     */
    public function testRemoveUniqueKey()
    {
        $instance = $this->object->removeUniqueKey('foobar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\Sqlite\QueryAlter::setName
     */
    public function testSetName()
    {
        $instance = $this->object->setName('foobar');
		$this->assertInstanceOf('Cradle\Sql\Sqlite\QueryAlter', $instance);
    }
}
