<?php 

namespace Cradle\Sql;

use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:02.
 */
class Cradle_Sql_MySql_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var MySql
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = SqlFactory::load(include(__DIR__.'/../assets/sql/mysql.php'));
		$schema = file_get_contents(__DIR__.'/../assets/sql/mysql-schema.sql');
		$this->object->query($schema);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Cradle\Sql\MySql::connect
     */
    public function testConnect()
    {
		$instance = $this->object->connect(include(__DIR__.'/../assets/sql/mysql.php'));
		$this->assertInstanceOf('Cradle\Sql\MySql', $instance);
    }

    /**
     * @covers Cradle\Sql\MySql::getAlterQuery
     */
    public function testGetAlterQuery()
    {
		$instance = $this->object->getAlterQuery('foobar');
		$this->assertInstanceOf('Cradle\Sql\MySql\QueryAlter', $instance);
    }

    /**
     * @covers Cradle\Sql\MySql::getColumns
     */
    public function testGetColumns()
    {
		$actual = $this->object->getColumns('address');
		$this->assertTrue(is_array($actual));
    }

    /**
     * @covers Cradle\Sql\MySql::getCreateQuery
     */
    public function testGetCreateQuery()
    {
		$instance = $this->object->getCreateQuery('foobar');
		$this->assertInstanceOf('Cradle\Sql\MySql\QueryCreate', $instance);
    }

    /**
     * @covers Cradle\Sql\MySql::getPrimaryKey
     */
    public function testGetPrimaryKey()
    {
		$actual = $this->object->getPrimaryKey('address');
		$this->assertEquals('address_id', $actual);
    }

    /**
     * @covers Cradle\Sql\MySql::getSubSelectQuery
     */
    public function testGetSubSelectQuery()
    {
		$instance = $this->object->getSubSelectQuery(new QuerySelect);
		$this->assertInstanceOf('Cradle\Sql\MySql\QuerySubSelect', $instance);
    }

    /**
     * @covers Cradle\Sql\MySql::getTables
     */
    public function testGetTables()
    {
		$actual = $this->object->getColumns('address');
		$this->assertTrue(is_array($actual));
    }

    /**
     * @covers Cradle\Sql\MySql::getTableSchema
     */
    public function testGetTableSchema()
    {
		$actual = $this->object->getTableSchema('address');
		$this->assertContains('CREATE TABLE `address`', $actual);
    }

    /**
     * @covers Cradle\Sql\MySql::getUtilityQuery
     */
    public function testGetUtilityQuery()
    {
		$instance = $this->object->getUtilityQuery();
		$this->assertInstanceOf('Cradle\Sql\MySql\QueryUtility', $instance);
    }
}
